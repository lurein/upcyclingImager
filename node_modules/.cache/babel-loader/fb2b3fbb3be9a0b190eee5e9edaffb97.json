{"remainingRequest":"C:\\Users\\lurei\\mde\\upcyclingImager\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\lurei\\mde\\upcyclingImager\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\lurei\\mde\\upcyclingImager\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lurei\\mde\\upcyclingImager\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\lurei\\mde\\upcyclingImager\\src\\App.vue","mtime":1664213791223},{"path":"C:\\Users\\lurei\\mde\\upcyclingImager\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664213841924},{"path":"C:\\Users\\lurei\\mde\\upcyclingImager\\node_modules\\babel-loader\\lib\\index.js","mtime":1664213839499},{"path":"C:\\Users\\lurei\\mde\\upcyclingImager\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664213841924},{"path":"C:\\Users\\lurei\\mde\\upcyclingImager\\node_modules\\vue-loader\\lib\\index.js","mtime":1664213843853}],"contextDependencies":[],"result":["import EasyCamera from \"easy-vue-camera\";\nexport default {\n  name: \"App\",\n  components: {\n    \"v-easy-camera\": EasyCamera\n  },\n  data: function () {\n    return {\n      picture: \"\"\n    };\n  },\n  computed: {},\n  methods: {\n    cameraAction(opt) {\n      if (opt === \"start\") {\n        this.$refs.picpreview.start();\n      } else if (opt === \"snap\") {\n        this.$refs.picpreview.snap();\n        setTimeout(() => {\n          this.processFile(this.picture);\n        }, 2000);\n      } else if (opt === \"stop\") {\n        this.$refs.picpreview.stop();\n      } else if (opt === \"close\") {\n        this.$refs.picpreview.close();\n      }\n    },\n\n    processFile(blob) {\n      // read the files\n      var reader = new FileReader();\n\n      if (blob instanceof Blob) {\n        reader.readAsArrayBuffer(blob);\n\n        reader.onload = function (event) {\n          // blob stuff\n          var blob = new Blob([event.target.result]); // create blob...\n\n          window.URL = window.URL || window.webkitURL;\n          var blobURL = window.URL.createObjectURL(blob); // and get it's URL\n\n          console.log(blob); // helper Image object\n\n          var image = new Image();\n          image.src = blobURL;\n\n          image.onload = function () {\n            // have to wait till it's loaded\n            var canvas = document.createElement(\"canvas\");\n            var width = image.width;\n            var height = image.height; // calculate the width and height, constraining the proportions\n\n            if (width > height) {\n              if (width > 100) {\n                //height *= max_width / width;\n                height = Math.round(height *= 100 / width);\n                width = 100;\n              }\n            } else {\n              if (height > 100) {\n                //width *= max_height / height;\n                width = Math.round(width *= 100 / height);\n                height = 100;\n              }\n            } // resize the canvas and draw the image data into it\n\n\n            canvas.width = width;\n            canvas.height = height;\n            var ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(image, 0, 0, width, height);\n            canvas.toBlob(function (blob) {\n              const newImg = document.createElement(\"img\");\n              const url = URL.createObjectURL(blob);\n              console.log(blob); //send this blob to API\n\n              newImg.onload = function () {\n                // no longer need to read the blob so it's revoked\n                URL.revokeObjectURL(url);\n              };\n\n              newImg.src = url;\n              document.body.appendChild(newImg);\n            });\n          };\n        };\n      } else {\n        console.log(this.picture);\n      }\n    }\n\n  }\n};",{"version":3,"mappings":"AA+BA;AAEA;EACAA,WADA;EAEAC;IACA;EADA,CAFA;EAKAC;IACA;MACAC;IADA;EAGA,CATA;EAUAC,YAVA;EAWAC;IACAC;MACA;QACA;MACA,CAFA,MAEA;QACA;QAEAC;UACA;QACA,CAFA,EAEA,IAFA;MAGA,CANA,MAMA;QACA;MACA,CAFA,MAEA;QACA;MACA;IACA,CAfA;;IAgBAC;MACA;MACA;;MAEA;QACAC;;QAEAA;UACA;UACA,2CAFA,CAEA;;UACAC;UACA,+CAJA,CAIA;;UAEAC,kBANA,CAQA;;UACA;UACAC;;UACAA;YACA;YACA;YACA;YACA,0BAJA,CAMA;;YACA;cACA;gBACA;gBACAC;gBACAC;cACA;YACA,CANA,MAMA;cACA;gBACA;gBACAA;gBACAD;cACA;YACA,CAnBA,CAqBA;;;YACAE;YACAA;YACA;YACAC;YAEAD;cACA;cACA;cAEAJ,kBAJA,CAKA;;cAEAM;gBACA;gBACAC;cACA,CAHA;;cAKAD;cACAE;YACA,CAdA;UAeA,CA1CA;QA2CA,CAtDA;MAuDA,CA1DA,MA0DA;QACAR;MACA;IACA;;EAjFA;AAXA","names":["name","components","data","picture","computed","methods","cameraAction","setTimeout","processFile","reader","window","console","image","height","width","canvas","ctx","newImg","URL","document"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <div style=\"position: relative; border: #fffa00 2px solid\">\n      <v-easy-camera\n        v-model=\"picture\"\n        ref=\"picpreview\"\n        :startOnMounted=\"true\"\n        output=\"blob\"\n      ></v-easy-camera>\n\n      <div\n        style=\"\n          width: 100%;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          position: absolute;\n          bottom: 0;\n          left: 0;\n        \"\n      >\n        <button @click=\"cameraAction('start')\">Start</button>\n        <button @click=\"cameraAction('snap')\">Snap</button>\n        <button @click=\"cameraAction('stop')\">Stop</button>\n        <button @click=\"cameraAction('close')\">Close</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport EasyCamera from \"easy-vue-camera\";\n\nexport default {\n  name: \"App\",\n  components: {\n    \"v-easy-camera\": EasyCamera,\n  },\n  data: function () {\n    return {\n      picture: \"\",\n    };\n  },\n  computed: {},\n  methods: {\n    cameraAction(opt) {\n      if (opt === \"start\") {\n        this.$refs.picpreview.start();\n      } else if (opt === \"snap\") {\n        this.$refs.picpreview.snap();\n\n        setTimeout(() => {\n          this.processFile(this.picture);\n        }, 2000);\n      } else if (opt === \"stop\") {\n        this.$refs.picpreview.stop();\n      } else if (opt === \"close\") {\n        this.$refs.picpreview.close();\n      }\n    },\n    processFile(blob) {\n      // read the files\n      var reader = new FileReader();\n\n      if (blob instanceof Blob) {\n        reader.readAsArrayBuffer(blob);\n\n        reader.onload = function (event) {\n          // blob stuff\n          var blob = new Blob([event.target.result]); // create blob...\n          window.URL = window.URL || window.webkitURL;\n          var blobURL = window.URL.createObjectURL(blob); // and get it's URL\n\n          console.log(blob);\n\n          // helper Image object\n          var image = new Image();\n          image.src = blobURL;\n          image.onload = function () {\n            // have to wait till it's loaded\n            var canvas = document.createElement(\"canvas\");\n            var width = image.width;\n            var height = image.height;\n\n            // calculate the width and height, constraining the proportions\n            if (width > height) {\n              if (width > 100) {\n                //height *= max_width / width;\n                height = Math.round((height *= 100 / width));\n                width = 100;\n              }\n            } else {\n              if (height > 100) {\n                //width *= max_height / height;\n                width = Math.round((width *= 100 / height));\n                height = 100;\n              }\n            }\n\n            // resize the canvas and draw the image data into it\n            canvas.width = width;\n            canvas.height = height;\n            var ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(image, 0, 0, width, height);\n\n            canvas.toBlob(function (blob) {\n              const newImg = document.createElement(\"img\");\n              const url = URL.createObjectURL(blob);\n\n              console.log(blob);\n              //send this blob to API\n\n              newImg.onload = function () {\n                // no longer need to read the blob so it's revoked\n                URL.revokeObjectURL(url);\n              };\n\n              newImg.src = url;\n              document.body.appendChild(newImg);\n            });\n          };\n        };\n      } else {\n        console.log(this.picture);\n      }\n    },\n  },\n};\n</script>\n\n<style>\nhtml,\nbody {\n  height: 100%;\n  font-family: \"Roboto\";\n  background: black;\n}\n</style>\n"]}]}